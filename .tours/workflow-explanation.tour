{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "workflow-explanation",
  "steps": [
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Workflow files are stored in the `.github/workflows` directory of your repository and use the **YAML** syntax. \r\n",
      "line": 1,
      "title": "about workflows"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "The `on` section defines what kind of GitHub event triggers the workflow. \r\nIn our case we want to trigger the workflow on every **push** to the **main** branch when at least one file matches the configured path (**src/FredApi/**)",
      "line": 7,
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 6,
          "character": 13
        }
      },
      "title": "workflow triggers"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "The `workflow_dispatch` event allows us to manually trigger the workflow",
      "line": 7,
      "selection": {
        "start": {
          "line": 7,
          "character": 1
        },
        "end": {
          "line": 7,
          "character": 21
        }
      },
      "title": "workflow dispatch"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Inside the `env:` section we can define environment variables. In our sample we are using:\r\n- `INITIALS` to deploy the Azure Function to a user specific Azure resource\r\n- `AZURE_FUNCTIONAPP_PACKAGE_PATH` reflects the location of our Azure function that we want to deploy\r\n- `DOTNET_VERSION` specifies the dotnet version that we want to set up\r\n\r\n\r\n> âš  After you forked the repository, you will have to change the `INITIALS` environment variable.",
      "line": 9,
      "selection": {
        "start": {
          "line": 12,
          "character": 3
        },
        "end": {
          "line": 12,
          "character": 17
        }
      },
      "title": "about environment variables"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Our workflow uses two jobs: \r\n\r\n- `build`: This is our Continuous Integration (CI) pipeline where we *build* our function package\r\n- `release`: This is our Continuous Delivery (CD) pipeline where we *deploy* the function to Azure.",
      "line": 14,
      "title": "about jobs"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "With the `runs-on` keyword, you specify the type of machine to run the job on. In our case, we want to use the latest version of ubuntu. \r\n\r\nFor more information, see [About GitHub-hosted runners](https://docs.github.com/en/actions/using-github-hosted-runners/about-github-hosted-runners)",
      "line": 16,
      "title": "about runs-on"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "The first step in almost every build job is the **checkout** action. This action checks-out your repository under $GITHUB_WORKSPACE, so your workflow can access it.",
      "line": 18,
      "selection": {
        "start": {
          "line": 18,
          "character": 1
        },
        "end": {
          "line": 19,
          "character": 32
        }
      },
      "title": "checkout action"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "This action sets up a dotnet core cli environment for use in actions. In our case we want to use the `3.1.x` .NET Core SDK.",
      "line": 21,
      "selection": {
        "start": {
          "line": 21,
          "character": 1
        },
        "end": {
          "line": 24,
          "character": 50
        }
      },
      "title": "setup environment action"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "This action uses a **bash script** to:\r\n\r\n- Change the directory to our Azure function project location\r\n- Build the Azure Function Project using the `dotnet` CLI and save the output to the `./output` directory\r\n- Change the directory to the initial location",
      "line": 26,
      "selection": {
        "start": {
          "line": 26,
          "character": 1
        },
        "end": {
          "line": 31,
          "character": 13
        }
      },
      "title": "build function action"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "This action uploads the Azure function package from our workflow allowing us to share the artifact between jobs and store them once a workflow is complete.",
      "line": 33,
      "selection": {
        "start": {
          "line": 34,
          "character": 13
        },
        "end": {
          "line": 38,
          "character": 33
        }
      },
      "title": "upload artifact action"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Jobs run in **parallel** by default. To run jobs sequentially, we have to define dependencies on other jobs using the `needs` keyword. In this case, we have to wait for the build job before we can release it",
      "line": 42,
      "selection": {
        "start": {
          "line": 42,
          "character": 1
        },
        "end": {
          "line": 43,
          "character": 1
        }
      },
      "title": "about job dependencies"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Using the `actions/download-artifact@v2` action, we can download the previous created Azure Function package to make it available inside the job.",
      "line": 45,
      "selection": {
        "start": {
          "line": 45,
          "character": 1
        },
        "end": {
          "line": 47,
          "character": 23
        }
      },
      "title": "download artifacts action"
    },
    {
      "file": ".github/workflows/fred-api-cicd.yml",
      "description": "Finally, we can deploy the package to Azure using the `Azure/functions-action@v1` action. \r\nFor the authentication, we choosed to use a publish-profile which we added to a GitHub secret before.",
      "line": 49,
      "selection": {
        "start": {
          "line": 50,
          "character": 1
        },
        "end": {
          "line": 54,
          "character": 56
        }
      },
      "title": "deploy azure function action"
    }
  ]
}